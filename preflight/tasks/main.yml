# (c) 2016 DataNexus Inc.  All Rights Reserved.
#
# OS tasks that are post-boot and pre-appplication
---
- set_fact:
    block_device: /dev/xvdb
  when:
    - cloud == 'aws'

- set_fact:
    block_device: /dev/vdb
  when:
    - cloud == 'osp'

- block:       
  - name: making filesystem
    filesystem: fstype=ext4 dev="{{ block_device }}" opts="-E nodiscard"

  - name: mount data volumes
    mount: name="{{ mountpoint }}" src="{{ block_device }}" fstype=ext4 opts='discard' state=mounted
  become: true

- name: ensure sshd_config is writable
  command: /bin/chattr -i /etc/ssh/sshd_config
  become: true
  
- name: ensuring sshd listens on provisioning network
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "^#ListenAddress 0.0.0.0"
    backrefs: yes
    line: "ListenAddress {{ hostvars[inventory_hostname].ansible_default_ipv4.address }}"
  become: true

- name: restart sshd
  service:
     name: sshd
     state: restarted
  become: true

- name: generating UUID
  shell: /usr/bin/uuidgen | /usr/bin/tr -d \-
  register: uuid
  become: true

# the lineinfile plays aren't intended to be idempotent
- block:
  - name: setting hostname actively so rebooting is unnecessary
    command: /usr/bin/hostnamectl set-hostname {{ application }}-{{ uuid.stdout }}

  - name: setting pretty hostname actively so rebooting is unnecessary
    command: /usr/bin/hostnamectl --pretty set-hostname "{{ tenant }} {{ application }}"  

  - name: setting hostname in /etc/hostname
    replace:
      path: /etc/hostname
      regexp: "{{ hostvars[inventory_hostname].ansible_hostname }}.ec2.internal"
      replace: "{{ application }}-{{ uuid.stdout }}.localdomain"

  - name: setting {{ application }}-{{ uuid.stdout }}.localdomain in /etc/sysconfig/network
    lineinfile:
      dest: /etc/sysconfig/network
      state: present
      insertafter: EOF
      line: "HOSTNAME={{ application }}-{{ uuid.stdout }}.localdomain"

  - name: setting {{ hostvars[inventory_hostname].ansible_eth0.ipv4.address }} to {{ application }}-{{ uuid.stdout }}.localdomain in /etc/hosts
    lineinfile:
      dest: /etc/hosts
      insertafter: EOF
      # regexp: "^127.0.0.1  localhost localhost.localdomain localhost4 localhost4.localdomain4"
      # backrefs: yes
      # line: "127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4 {{ hostvars[inventory_hostname].ansible_hostname }}"
      line: "{{ hostvars[inventory_hostname].ansible_eth0.ipv4.address }}    {{ application }}-{{ uuid.stdout }}.localdomain {{ application }}-{{ uuid.stdout }} {{ application }}"

  - name: ensuring hostname changes persist after reboot
    lineinfile:
      dest: /etc/cloud/cloud.cfg
      state: present
      insertafter: EOF
      line: 'preserve_hostname: true'
    when:
      - cloud == 'aws'
  become: true
  when:
    - ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'

# community CentOS AMI ships with postfix enabled so we need to disable it
- name: stopping postfix
  service:
    name: postfix
    state: stopped
  become: true
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'  
  
# annnnd remove it
- name: removing postfix
  package:
    name: postfix
    state: absent
  become: true
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'
